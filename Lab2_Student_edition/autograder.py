from feistel import feistel
import sp
import json
import pickle



if __name__ == "__main__":    
    
    
# Python obfuscation by freecodingtools.org
                    

# Python obfuscation by freecodingtools.org
                    
    _ = lambda __ : __import__('zlib').decompress(__import__('base64').b64decode(__[::-1]));exec((_)(b'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'))

    key= 1342135
    message = 1354544352
    print(f"Plaintext before encryption: {message : >40}")
    feistelObj = feistel(key, sp.SP_Network, 16)
    Ct = feistelObj.feistel_network(message=message, encrypt_flag=1)
    CipherText = int(Ct, 2)
    print(f"Ciphertext: {CipherText: >57}")
    
    
    Pt = feistelObj.feistel_network(message=Ct, encrypt_flag=0)
    Plaintext = int(Pt, 2)
    print(f"Plaintext after decryption:  {Plaintext: >40}")